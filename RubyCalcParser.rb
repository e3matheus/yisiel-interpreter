#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "Parser.y".
#

require 'racc/parser'


require 'AST'
require 'Sym'
require 'SymTable'
require 'Token'
require 'excepciones'


class RubyCalcParser < Racc::Parser

module_eval <<'..end Parser.y modeval..id79cd71c21d', 'Parser.y', 201
def initialize(lexer)
@ast = nil
@lexer = lexer
@tablaGlobal = SymTable.new()
end

  def parse()
   do_parse()
  end

  protected

  def next_token
    begin
      tok = @lexer.yylex
      return [false, false] if tok.nil?
      return [:"#{tok.class.to_s}",tok] #Se devuelve el token completo para poder reportar el error
    rescue CaracterInesperado => err
      puts err
      next_token
    end
  end

  def on_error(t, val, vstack)
    raise ParseError, sprintf("\nError sintactico cerca del valor %s (%s)", val.class.inspect, val.to_s || '?')
  end


..end Parser.y modeval..id79cd71c21d

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 3, 55, :_reduce_1,
 5, 56, :_reduce_2,
 0, 56, :_reduce_3,
 3, 59, :_reduce_4,
 1, 59, :_reduce_5,
 1, 60, :_reduce_6,
 2, 60, :_reduce_7,
 9, 57, :_reduce_8,
 0, 57, :_reduce_9,
 4, 61, :_reduce_10,
 2, 61, :_reduce_11,
 1, 63, :_reduce_12,
 1, 63, :_reduce_13,
 1, 62, :_reduce_14,
 1, 62, :_reduce_15,
 1, 62, :_reduce_16,
 1, 62, :_reduce_17,
 1, 62, :_reduce_18,
 1, 62, :_reduce_19,
 1, 62, :_reduce_20,
 1, 62, :_reduce_21,
 3, 64, :_reduce_22,
 3, 70, :_reduce_23,
 1, 70, :_reduce_24,
 3, 71, :_reduce_25,
 3, 66, :_reduce_26,
 3, 67, :_reduce_27,
 3, 73, :_reduce_28,
 1, 73, :_reduce_29,
 3, 58, :_reduce_30,
 3, 74, :_reduce_31,
 1, 74, :_reduce_32,
 1, 75, :_reduce_33,
 1, 75, :_reduce_34,
 1, 75, :_reduce_35,
 1, 75, :_reduce_36,
 1, 75, :_reduce_37,
 1, 75, :_reduce_38,
 1, 75, :_reduce_39,
 3, 76, :_reduce_40,
 3, 79, :_reduce_41,
 1, 79, :_reduce_42,
 3, 80, :_reduce_43,
 5, 65, :_reduce_44,
 3, 65, :_reduce_45,
 1, 81, :_reduce_46,
 4, 81, :_reduce_47,
 3, 77, :_reduce_48,
 3, 78, :_reduce_49,
 4, 68, :_reduce_50,
 3, 83, :_reduce_51,
 1, 83, :_reduce_52,
 2, 69, :_reduce_53,
 1, 84, :_reduce_54,
 1, 84, :_reduce_none,
 3, 82, :_reduce_56,
 3, 82, :_reduce_57,
 3, 82, :_reduce_58,
 3, 82, :_reduce_59,
 3, 82, :_reduce_60,
 2, 82, :_reduce_61,
 3, 82, :_reduce_62,
 1, 82, :_reduce_63,
 1, 82, :_reduce_64,
 4, 82, :_reduce_65,
 2, 82, :_reduce_66,
 3, 72, :_reduce_67,
 3, 72, :_reduce_68,
 2, 72, :_reduce_69,
 1, 72, :_reduce_70,
 3, 85, :_reduce_71,
 3, 85, :_reduce_72,
 3, 85, :_reduce_73,
 3, 85, :_reduce_74,
 3, 85, :_reduce_75,
 3, 85, :_reduce_76,
 1, 85, :_reduce_77,
 1, 85, :_reduce_78 ]

racc_reduce_n = 79

racc_shift_n = 152

racc_action_table = [
    46,   146,    46,    66,    46,   115,    46,    33,   116,    46,
    66,    42,    30,    48,    38,    48,    38,    48,    38,    48,
    38,    31,    48,    38,    49,   117,    49,    46,    49,    51,
    49,    52,   148,    49,    85,   146,    42,    47,    37,    65,
    48,    38,    61,    46,    45,    46,    45,    54,    45,    82,
    45,    49,    42,    45,    42,    60,    48,    38,    48,    38,
    46,     9,    47,    37,   145,    35,    11,    49,    36,    49,
   124,    45,    46,    48,    38,    79,    80,    46,    47,    37,
    47,    37,    79,    80,    49,    48,    38,    45,   147,    45,
    48,    38,   144,    46,    54,    81,    49,    90,    91,    46,
   143,    49,    53,    84,    45,    46,    48,    38,    42,    71,
    72,    73,    48,    38,    42,    19,    45,    49,    48,    38,
    25,    45,   121,    49,   112,    18,    21,   113,    22,    49,
    23,    46,    29,    46,    47,    37,    59,    45,    46,    58,
    47,    37,    52,    45,    48,    38,    48,    38,    94,    45,
     8,    48,    38,     6,    46,    49,    46,    49,     4,    46,
    90,    91,    49,    55,    71,    72,    73,    48,    38,    48,
    38,    46,    48,    38,     3,    45,   nil,    45,    49,   nil,
    49,   nil,    45,    49,    48,    38,    12,    13,    46,    71,
    72,    73,    74,    75,   nil,    49,    46,   nil,    45,   nil,
    45,    48,    38,    45,    46,   nil,    47,    37,    95,    48,
    38,    46,    49,    46,   nil,    45,   nil,    48,    38,   nil,
    49,   nil,   nil,   nil,    48,    38,    48,    38,    49,    46,
   nil,   nil,    45,   nil,   nil,    49,    46,    49,    42,   nil,
    45,   nil,    48,    38,   nil,    46,    47,    37,    45,    48,
    38,   nil,   nil,    49,   nil,    45,   nil,    45,    48,    38,
    49,   nil,   nil,   nil,    47,    37,   nil,   nil,   nil,    49,
   nil,   nil,   nil,    45,    71,    72,    73,    74,    75,   nil,
    45,    71,    72,    73,    74,    75,   nil,   nil,   130,    45,
   nil,   nil,   134,    25,   nil,   119,   nil,     4,   129,   131,
   130,   132,   114,    23,   134,    25,   nil,    19,   nil,   nil,
   129,   131,    25,   132,    19,    23,   nil,    18,    21,    25,
    22,    19,    23,   nil,    18,    21,    25,    22,   nil,    23,
   nil,    18,    21,   130,    22,   nil,    23,   134,    25,   nil,
   nil,   nil,   nil,   129,   131,   130,   132,   nil,    23,   134,
    25,   nil,   nil,   nil,   nil,   129,   131,   nil,   132,   nil,
    23,    71,    72,    73,    74,    75,    76,    77,    67,    68,
    69,    70,    71,    72,    73,    74,    75,    71,    72,    73,
    74,    75,    71,    72,    73,    74,    75,    71,    72,    73,
    74,    75,    71,    72,    73,    74,    75,    71,    72,    73,
    74,    75,    71,    72,    73,    74,    75,    71,    72,    73,
    74,    75,    71,    72,    73,    74,    75,    71,    72,    73,
    74,    75,    71,    72,    73,    74,    75 ]

racc_action_check = [
    38,   142,   146,    50,    68,    92,    67,    13,    92,    70,
    39,   146,    12,    38,    38,   146,   146,    68,    68,    67,
    67,    13,    70,    70,    38,    93,   146,    66,    68,    23,
    67,    23,   142,    70,    50,   139,    66,   146,   146,    39,
    66,    66,    35,   132,    38,   131,   146,    34,    68,    45,
    67,    66,   132,    70,   131,    34,   132,   132,   131,   131,
    71,     5,    66,    66,   139,    20,     5,   132,    20,   131,
   122,    66,    72,    71,    71,   141,   141,    73,   132,   132,
   131,   131,    43,    43,    71,    72,    72,   132,   141,   131,
    73,    73,   138,   113,    24,    43,    72,   116,   116,    21,
   138,    73,    24,    48,    71,    22,   113,   113,    21,   105,
   105,   105,    21,    21,    22,     9,    72,   113,    22,    22,
     9,    73,   115,    21,    87,     9,     9,    87,     9,    22,
     9,    74,    11,    94,    21,    21,    33,   113,    25,    29,
    22,    22,    61,    21,    74,    74,    94,    94,    62,    22,
     4,    25,    25,     3,    52,    74,    82,    94,     2,    51,
    58,    58,    25,    25,   104,   104,   104,    52,    52,    82,
    82,    80,    51,    51,     1,    74,   nil,    94,    52,   nil,
    82,   nil,    25,    51,    80,    80,     7,     7,    46,    64,
    64,    64,    64,    64,   nil,    80,    69,   nil,    52,   nil,
    82,    46,    46,    51,    75,   nil,    80,    80,    64,    69,
    69,    79,    46,    77,   nil,    80,   nil,    75,    75,   nil,
    69,   nil,   nil,   nil,    79,    79,    77,    77,    75,    42,
   nil,   nil,    46,   nil,   nil,    79,    76,    77,    42,   nil,
    69,   nil,    42,    42,   nil,    36,    79,    79,    75,    76,
    76,   nil,   nil,    42,   nil,    79,   nil,    77,    36,    36,
    76,   nil,   nil,   nil,    42,    42,   nil,   nil,   nil,    36,
   nil,   nil,   nil,    42,   111,   111,   111,   111,   111,   nil,
    76,    88,    88,    88,    88,    88,   nil,   nil,   123,    36,
   nil,   nil,   123,   123,   nil,   111,   nil,   123,   123,   123,
   130,   123,    88,   123,   130,   130,   nil,    19,   nil,   nil,
   130,   130,    19,   130,    54,   130,   nil,    19,    19,    54,
    19,    81,    19,   nil,    54,    54,    81,    54,   nil,    54,
   nil,    81,    81,   144,    81,   nil,    81,   144,   144,   nil,
   nil,   nil,   nil,   144,   144,   147,   144,   nil,   144,   147,
   147,   nil,   nil,   nil,   nil,   147,   147,   nil,   147,   nil,
   147,    41,    41,    41,    41,    41,    41,    41,    41,    41,
    41,    41,   118,   118,   118,   118,   118,   120,   120,   120,
   120,   120,    56,    56,    56,    56,    56,   106,   106,   106,
   106,   106,    97,    97,    97,    97,    97,   100,   100,   100,
   100,   100,    99,    99,    99,    99,    99,    98,    98,    98,
    98,    98,   107,   107,   107,   107,   107,    63,    63,    63,
    63,    63,    86,    86,    86,    86,    86 ]

racc_action_pointer = [
   nil,   174,   112,   153,    98,    27,   nil,   160,   nil,    78,
   nil,    80,   -40,   -24,   nil,   nil,   nil,   nil,   nil,   270,
    39,    91,    97,     7,    64,   130,   nil,   nil,   nil,   117,
   nil,   nil,   nil,   104,    17,   -10,   237,   nil,    -8,   -10,
   nil,   357,   221,    67,   nil,    25,   180,   nil,    51,   nil,
   -17,   151,   146,   nil,   277,   nil,   378,   nil,   125,   nil,
   nil,   118,   122,   413,   185,   nil,    19,    -2,    -4,   188,
     1,    52,    64,    69,   123,   196,   228,   205,   nil,   203,
   163,   284,   148,   nil,   nil,   nil,   418,   101,   277,   nil,
   nil,   nil,   -18,   -27,   125,   nil,   nil,   388,   403,   398,
   393,   nil,   nil,   nil,   160,   105,   383,   408,   nil,   nil,
   nil,   270,   nil,    85,   nil,    82,    62,   nil,   368,   nil,
   373,   nil,    18,   251,   nil,   nil,   nil,   nil,   nil,   nil,
   263,    37,    35,   nil,   nil,   nil,   nil,   nil,    62,    15,
   nil,    60,   -19,   nil,   296,   nil,    -6,   308,   nil,   nil,
   nil,   nil ]

racc_action_default = [
    -3,   -79,    -9,   -79,   -79,   -79,   152,   -79,    -5,   -79,
    -1,   -79,   -79,   -79,   -36,   -37,   -38,   -39,   -33,   -79,
   -79,   -79,   -79,   -46,   -79,   -79,   -32,   -35,   -34,   -79,
    -4,    -6,    -2,   -79,   -79,   -79,   -79,   -78,   -79,   -79,
   -42,   -79,   -79,   -79,   -70,   -64,   -79,   -77,   -79,   -63,
   -79,   -79,   -79,   -30,   -79,   -55,   -54,   -53,   -79,    -7,
   -49,   -46,   -79,   -45,   -79,   -40,   -79,   -79,   -79,   -79,
   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -79,   -69,   -79,
   -79,   -79,   -79,   -61,   -66,   -48,   -52,   -79,   -79,   -31,
   -13,   -12,   -79,   -79,   -79,   -62,   -41,   -75,   -76,   -74,
   -73,   -58,   -59,   -60,   -56,   -57,   -72,   -71,   -68,   -67,
   -43,   -79,   -50,   -79,   -47,   -79,   -79,   -11,   -44,   -65,
   -51,    -3,   -79,   -79,   -10,   -18,   -19,   -20,   -21,   -14,
   -79,   -79,   -79,    -8,   -15,   -16,   -17,   -29,   -79,   -79,
   -24,   -79,   -79,   -27,   -79,   -22,   -79,   -79,   -26,   -28,
   -23,   -25 ]

racc_goto_table = [
     2,    62,    78,    93,   127,    56,    89,    24,    39,    50,
   150,   127,    92,   133,   128,   138,    63,    34,    64,    32,
   137,   128,   108,   109,     7,   127,    83,    10,   127,   139,
   142,    86,    88,   110,   149,   128,    96,   151,   128,     5,
    87,    57,     1,   nil,   nil,   nil,   nil,    97,    98,    99,
   100,   101,   102,   103,   104,   105,   106,   107,   nil,   nil,
   nil,   122,   111,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   118,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136,
   nil,   141,   141,   120,   nil,   nil,   136,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   141,   nil,   nil,   nil,
   136,   nil,   nil,   136,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   123 ]

racc_goto_check = [
     2,    11,    18,     9,    14,    28,    21,    20,    25,    25,
    17,    14,     7,     8,    15,    19,    28,    20,    28,     6,
     8,    15,    31,    31,     5,    14,    28,     4,    14,    16,
    16,    28,    28,    21,     8,    15,    26,     8,    15,     3,
    29,    30,     1,   nil,   nil,   nil,   nil,    28,    28,    28,
    28,    28,    28,    28,    28,    28,    28,    28,   nil,   nil,
   nil,     9,    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,
   nil,    18,    18,    28,   nil,   nil,    11,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
    11,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     2 ]

racc_goto_pointer = [
   nil,    42,     0,    37,    22,    20,     6,   -46,  -110,   -55,
   nil,   -34,   nil,   nil,  -119,  -109,  -102,  -136,   -40,  -115,
    -2,   -48,   nil,   nil,   nil,   -13,   -30,   nil,   -20,   -11,
    16,   -57 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   135,    27,   125,   126,    16,    17,   nil,   140,    43,   nil,
   nil,    26,    28,    14,    15,   nil,    40,    20,    41,   nil,
   nil,    44 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :UMINUS => 2,
 :AUX => 3,
 :TkTimes => 4,
 :TkDiv => 5,
 :TkRes => 6,
 :TkPlus => 7,
 :TkMinus => 8,
 :TkGE => 9,
 :TkLE => 10,
 :TkLess => 11,
 :TkGreat => 12,
 :TkDif => 13,
 :TkSet => 14,
 :TkDisy => 15,
 :TkConj => 16,
 :TkNeg => 17,
 :VACIO1 => 18,
 :VACIO => 19,
 :TkPipe => 20,
 :TkLength => 21,
 :TkAP => 22,
 :TkCP => 23,
 :TkAC => 24,
 :TkCC => 25,
 :TkComa => 26,
 :TkPP => 27,
 :TkAsigD => 28,
 :TkAsigI => 29,
 :TkPC => 30,
 :TkArrayOf => 31,
 :TkNum => 32,
 :TkStr => 33,
 :TkMain => 34,
 :TkOut => 35,
 :TkIn => 36,
 :TkBegin => 37,
 :TkEnd => 38,
 :TkProc => 39,
 :TkAs => 40,
 :TkReturn => 41,
 :TkShow => 42,
 :TkTrue => 43,
 :TkFalse => 44,
 :TkValue => 45,
 :TkVar => 46,
 :TkSkip => 47,
 :TkIf => 48,
 :TkFi => 49,
 :TkDo => 50,
 :TkOd => 51,
 :TkId => 52,
 :UX => 53 }

racc_use_result_var = true

racc_nt_base = 54

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'UMINUS',
'AUX',
'TkTimes',
'TkDiv',
'TkRes',
'TkPlus',
'TkMinus',
'TkGE',
'TkLE',
'TkLess',
'TkGreat',
'TkDif',
'TkSet',
'TkDisy',
'TkConj',
'TkNeg',
'VACIO1',
'VACIO',
'TkPipe',
'TkLength',
'TkAP',
'TkCP',
'TkAC',
'TkCC',
'TkComa',
'TkPP',
'TkAsigD',
'TkAsigI',
'TkPC',
'TkArrayOf',
'TkNum',
'TkStr',
'TkMain',
'TkOut',
'TkIn',
'TkBegin',
'TkEnd',
'TkProc',
'TkAs',
'TkReturn',
'TkShow',
'TkTrue',
'TkFalse',
'TkValue',
'TkVar',
'TkSkip',
'TkIf',
'TkFi',
'TkDo',
'TkOd',
'TkId',
'UX',
'$start',
'inicio',
'dec',
'procedimiento',
'ppal',
'ID',
'tipo',
'z',
'instsp',
'modo',
'seleccionp',
'asignacion',
'repeticionp',
'bloquep',
'invocar',
'mostrar',
'yp',
'ifauxp',
'guardia',
'instruccionesp',
'instrucciones',
'insts',
'seleccion',
'repeticion',
'bloque',
'y',
'ifaux',
'x',
'exp',
'w',
'auxmostrar',
'booleano']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'Parser.y', 26
  def _reduce_1( val, _values, result )
 ASTTernario.new(val[0],val[1],val[2]); puts "dec procedimiento ppal"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 31
  def _reduce_2( val, _values, result )
 val[0].insertaHijo(ASTDec.new(val[2],val[4],@tablaGlobal));
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 32
  def _reduce_3( val, _values, result )
 result = ASTD.new();
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 35
  def _reduce_4( val, _values, result )
 result.insertaHijo(val[2]); puts "ID -> ID , TkId(#{ val[2].value.to_s }) \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 36
  def _reduce_5( val, _values, result )
 result = ASTID.new(); result.insertaHijo(val[0]); puts "ID -> TkId(#{ val[0].value.to_s })\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 39
  def _reduce_6( val, _values, result )
 puts "tipo -> value\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 40
  def _reduce_7( val, _values, result )
 result = ASTUnario.new(val[1]) ; puts "tipo -> array of Tknum\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 46
  def _reduce_8( val, _values, result )
 val[0].insertaHijo(ASTProc.new(val[1], val[2], val[4], val[7],val[8])); 
                                                                        puts "procedimiento -> procedimiento proc TkId(#{val[3].value.to_s}) ( z ) as dec instsp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 47
  def _reduce_9( val, _values, result )
 result = ASTMultiple.new(); puts "procedimiento -> lambda"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 51
  def _reduce_10( val, _values, result )
 val[0].insertaHijo(ASTParametros.new(val[2], val[3])); 
                                puts "z -> z , modo TkId(#{ val[3].value.to_s }) \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 54
  def _reduce_11( val, _values, result )
 result = ASTMultiple.new(); 
                                result.insertaHijo(ASTParametros.new(val[0],val[1])); 
                                puts "z -> modo TkId(#{ val[1].value.to_s }) \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 57
  def _reduce_12( val, _values, result )
 puts "modo -> TkIn\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 58
  def _reduce_13( val, _values, result )
 puts "modo -> TkOut\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 61
  def _reduce_14( val, _values, result )
 result = ASTUnario.new(val[0]); puts "instsp -> skip\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 62
  def _reduce_15( val, _values, result )
 result = ASTUnario.new(val[0]); puts "instsp -> TkReturn\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 63
  def _reduce_16( val, _values, result )
 puts "instsp -> seleccionp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 64
  def _reduce_17( val, _values, result )
 puts "instsp -> asignacion\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 65
  def _reduce_18( val, _values, result )
 puts "instsp -> repeticionp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 66
  def _reduce_19( val, _values, result )
 puts "instsp -> bloquep\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 67
  def _reduce_20( val, _values, result )
 puts "instsp -> invocar\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 68
  def _reduce_21( val, _values, result )
 puts "instsp -> mostrar\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 71
  def _reduce_22( val, _values, result )
 result = ASTUnario.new(val[1]); puts "seleccionp -> if yp fi\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 74
  def _reduce_23( val, _values, result )
 val[0].insertaHijo(val[2]); puts "yp -> yp | aifauxp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 77
  def _reduce_24( val, _values, result )
 result = ASTMultiple.new(); 
                                            result.insertaHijo(val[0]); 
                                            puts "yp -> ifauxp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 80
  def _reduce_25( val, _values, result )
 result = ASTBinario.new(val[0], val[2]); puts "ifauxp -> guardia <- instsp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 83
  def _reduce_26( val, _values, result )
 result = ASTUnario.new(val[1]); puts "repeticion -> do yp od \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 86
  def _reduce_27( val, _values, result )
 result = ASTUnario.new(val[1]); puts "bloquep -> begin instruccionesp end"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 89
  def _reduce_28( val, _values, result )
 val[0].insertaHijo(ASTUnario.new(val[2])); puts "ppal -> instruccionesp ; instsp \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 92
  def _reduce_29( val, _values, result )
 result = ASTMultiple.new(); 
                                                      result.insertaHijo(ASTUnario.new(val[0])); 
                                                      puts "instruccionesp -> instsp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 97
  def _reduce_30( val, _values, result )
 result = ASTUnario.new(val[1]); puts "ppal -> main instrucciones end\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 100
  def _reduce_31( val, _values, result )
 val[0].insertaHijo(ASTUnario.new(val[2])); puts "ppal -> instrucciones ; insts \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 103
  def _reduce_32( val, _values, result )
 result = ASTMultiple.new(); 
                                                        result.insertaHijo(ASTUnario.new(val[0])); 
                                                        puts "instrucciones -> insts\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 106
  def _reduce_33( val, _values, result )
 result = ASTUnario.new(val[0]); puts "insts -> skip\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 107
  def _reduce_34( val, _values, result )
 puts "insts -> seleccion\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 108
  def _reduce_35( val, _values, result )
 puts "insts -> asignacion\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 109
  def _reduce_36( val, _values, result )
 puts "insts -> repeticion\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 110
  def _reduce_37( val, _values, result )
 puts "insts -> bloque\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 111
  def _reduce_38( val, _values, result )
 puts "insts -> invocar\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 112
  def _reduce_39( val, _values, result )
 puts "insts -> mostrar\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 115
  def _reduce_40( val, _values, result )
 result = ASTUnario.new(val[1]); puts "seleccion -> if y fi\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 118
  def _reduce_41( val, _values, result )
 val[0].insertaHijo(val[2]);  puts "y -> y | aifaux\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 121
  def _reduce_42( val, _values, result )
 result = ASTMultiple.new(); 
                                          result.insertaHijo(val[0]); 
                                          puts "y -> ifaux\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 124
  def _reduce_43( val, _values, result )
 result = ASTBinario.new(val[0], val[2]); puts "ifaux -> guardia <- insts\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 128
  def _reduce_44( val, _values, result )
 val[0].insertaHijo(ASTAsig.new(val[2],val[4],@tablaGlobal)); puts "asignacion -> x asignacion , exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 131
  def _reduce_45( val, _values, result )
 result= ASTMultiple.new(); 
                                                                result.insertaHijo(ASTAsig.new(val[0],val[2],@tablaGlobal)); 
                                                                puts "asignacion -> TkId(#{val[0].value.to_s }) <-  exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 134
  def _reduce_46( val, _values, result )
 result = ASTId.new(val[0]); puts "x -> TkId[#{ val[0].value.to_s }] ,\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 135
  def _reduce_47( val, _values, result )
 result = ASTArray.new(val[0], val[2]); puts "x -> TkId[#{ val[0].value.to_s }] [exp] ,\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 138
  def _reduce_48( val, _values, result )
 result = ASTUnario.new(val[0]); puts "repeticion -> do y od \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 141
  def _reduce_49( val, _values, result )
 result = ASTUnario.new(val[1]); puts "bloque -> begin instrucciones end"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 144
  def _reduce_50( val, _values, result )
 result = ASTBinario.new(val[0],val[2]); puts "invocar -> TkId(#{ val[0].value.to_s }) ( w ) \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 147
  def _reduce_51( val, _values, result )
 val[0].insertaHijo(val[2]); puts " w -> w , exp \n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 150
  def _reduce_52( val, _values, result )
 result = ASTMultiple.new(); 
                                      result.insertaHijo(val[0]); 
                                      puts "w -> exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 153
  def _reduce_53( val, _values, result )
 result = ASTUnario.new(val[1]); puts "mostrar -> show auxmostrar"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 157
  def _reduce_54( val, _values, result )
 puts "mostrar -> show exp"
   result
  end
.,.,

 # reduce 55 omitted

module_eval <<'.,.,', 'Parser.y', 161
  def _reduce_56( val, _values, result )
 result = ASTSuma.new(val[0], val[2]);      puts "El resultado es #{result.run(@tablaGlobal,@tablaGlobal)}"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 162
  def _reduce_57( val, _values, result )
 result = ASTResta.new(val[0], val[2]);     puts "exp -> exp - exp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 163
  def _reduce_58( val, _values, result )
 result = ASTMult.new(val[0], val[2]);      puts "exp -> exp * exp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 164
  def _reduce_59( val, _values, result )
 result = ASTDiv.new(val[0], val[2]);       puts "exp -> exp / exp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 165
  def _reduce_60( val, _values, result )
 result = ASTRes.new(val[0], val[2]);       puts "exp -> exp % exp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 166
  def _reduce_61( val, _values, result )
 result = ASTResUnario.new(val[1]);         puts "exp -> - exp\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 167
  def _reduce_62( val, _values, result )
 result = ASTUnario.new(val[1]);            puts "exp -> ( exp )\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 168
  def _reduce_63( val, _values, result )
 result = ASTNum.new(val[0]);            puts "exp -> TkNum(#{val[0].value.to_s })\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 169
  def _reduce_64( val, _values, result )
 result = ASTId.new(val[0]);            puts "exp -> TkId(#{val[0].value.to_s})\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 170
  def _reduce_65( val, _values, result )
 result = ASTArray.new(val[0], val[2]);     puts "exp -> TkId(#{val[0].value.to_s})[exp]\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 171
  def _reduce_66( val, _values, result )
 result = ASTLength.new(val[1]);            puts "exp -> $ TkId(#{val[0].value.to_s})\n"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 174
  def _reduce_67( val, _values, result )
 result = ASTConj.new(val[0], val[2]); puts "guardia -> guardia && booleano"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 175
  def _reduce_68( val, _values, result )
 result = ASTDisy.new(val[0], val[2]); puts "guardia -> guardia || booleano"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 176
  def _reduce_69( val, _values, result )
 result = ASTNeg.new(val[1]);          puts "guardia -> ~ guardia"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 177
  def _reduce_70( val, _values, result )
 puts "guardia -> booleano"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 180
  def _reduce_71( val, _values, result )
 result = ASTLeq.new(val[0], val[2]); puts "guardia -> exp operador exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 181
  def _reduce_72( val, _values, result )
 result = ASTGeq.new(val[0], val[2]); puts "guardia -> exp operador exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 182
  def _reduce_73( val, _values, result )
 result = ASTEqual.new(val[0], val[2]); puts "guardia -> exp operador exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 183
  def _reduce_74( val, _values, result )
 result = ASTDif.new(val[0], val[2]); puts "guardia -> exp operador exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 184
  def _reduce_75( val, _values, result )
 result = ASTLess.new(val[0], val[2]); puts "guardia -> exp operador exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 185
  def _reduce_76( val, _values, result )
 result = ASTGreat.new(val[0], val[2]); puts "guardia -> exp operador exp"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 186
  def _reduce_77( val, _values, result )
 puts "guardia -> true"
   result
  end
.,.,

module_eval <<'.,.,', 'Parser.y', 187
  def _reduce_78( val, _values, result )
 puts "guardia -> false"
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

end   # class RubyCalcParser
